// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int    @id @default(autoincrement())
  discordId       String @unique
  discordUserName String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  sessionsCreated Session[]

  sessionsParticipated SessionParticipant[]
}

model Session {
  id Int @id @default(autoincrement())

  title       String
  description String @db.VarChar(1500)
  startAt     DateTime
  seatsCount  Int

  creatorId Int
  creator   User @relation(fields: [creatorId], references: [id])

  coverImage File?

  address Address?

  participants SessionParticipant[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SessionParticipant {
  id Int @id @default(autoincrement())

  sessionId Int
  session   Session @relation(fields: [sessionId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id       Int    @id @default(autoincrement())
  fileName String
  fileUrl  String
  fileSize Int

  sessionId Int?     @unique
  session   Session? @relation(fields: [sessionId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id Int @id @default(autoincrement())
  placeId        String  // place id from geocoding api
  latitude       Float
  longitude      Float
  displayName    String @db.VarChar(500)
  additionalInfo String?

  sessionId Int?     @unique
  session   Session? @relation(fields: [sessionId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
